SOPs for maintainers
********************

Building a virtual environment
------------------------------

On windows:
>>> py -3 -m venv .venv           # create virtual environment
>>> .venv/Scripts/activate        # activate virtual environment

Then select the Python interpreter in the .venv folder. In VSCode:
View > Command Palette > Python select interpreter -> enter interpreter path (.venv/Scripts/python.exe)

Then install requirements

>>> pip install -r requirements.txt

To leave:
>>> deactivate


Creating a new release (from a fork)
------------------------------------

- Check test coverage is 100% (see below)
- Update the version number in the below locations, push and check that the test action passes. If it passes, make a pull-request to push to dev.
    - pyproject.toml
    - docs/source/conf.py
- Merge the dev branch with the main branch. Check that the documentation builds OK.
- Build release notes (see below) and push changes to dev and main. Check docs, actions, and badges on README.
- Create a release on github, with the main branch as target
- Create a release on PyPI (see below)
- Create a release on Zenodo (v1.0 and onwards)

Check test coverage
-------------------

cd to /dcmri top folder
>>> pytest --cov=dcmri --cov-report term-missing

Build release notes
-------------------
- Get a personal token on https://github.com/settings/tokens (does not need any permissions)
- Save the token in the environment variable GH_TOKEN. On windows:
>>> $env:GH_TOKEN='token'
- Build the changelog from current version to current main. For instance:
>>> changelist QIB-Sheffield/mdreg v0.3.8 main --format rst
- Copy-paste the terminal output in an .rst file and save it in docs/source/releases
- Add an entry in the index of docs/source/releases


Creating a PyPi release
-----------------------

If needed:

>>> pip install build
>>> pip install twine

In the terminal, cd to the /dcmri directory, and:

>>> python -m build
>>> twine upload dist/*

When prompted for user name, enter __token__

As password paste the API token generated in PyPi dcmri repository settings (https://pypi.org/manage/project/dcmri/settings/). Note: Paste with Ctrl-V does not work in Windows. Use Edit > Paste via the menu.




Changing dependencies
---------------------

- update requirements.txt
- update pyproject.toml
- generate a new poetry.lock file. On the terminal, run
>>> poetry lock





